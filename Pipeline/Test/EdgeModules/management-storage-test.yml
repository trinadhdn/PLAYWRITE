steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download environment artifact'
    inputs:
      artifact: 'environment'

  - powershell: |
      $filePath = Join-Path -Path $env:PIPELINE_WORKSPACE -ChildPath "environment.json"
      $json = Get-Content $filePath | Out-String | ConvertFrom-Json

      foreach($prop in $json.psobject.properties) {
        echo $prop.Name $prop.Value
        Write-Host("##vso[task.setvariable variable=$($prop.Name);isOutput=true]$($prop.Value)")
      }
    name: getBuildVariables
    displayName: 'Set build variables'

  - task: DownloadPipelineArtifact@2
    displayName: 'Download integration tests pipeline artifact'
    inputs:
      artifact: connmodule-integrationtests-$(getBuildVariables.artifactVersion)

  - task: ExtractFiles@1
    displayName: 'Extract pipeline artifacts'
    inputs:
      archiveFilePatterns: |
        $(Pipeline.Workspace)/connmodule-integrationtests-$(getBuildVariables.artifactVersion).zip
      cleanDestinationFolder: false

  - task: AzurePowerShell@5
    displayName: 'Run Tests'
    inputs:
      azureSubscription: ${{ parameters.service_conn }}
      ScriptType: 'InlineScript'
      Inline: |
        Import-Module ./toolintegrations/traceability/scripts/customjsongeneratorfunction_pester.psm1 -Force
        $env:environment = "$(targetEnvironment)" ;  $env:locationshortcut = "$(locationShortcut)" ;  $env:subsriptionprefix = "$(subscriptionPrefix)"
        $env:vmrgname = "$(testVmRg)"
        $pesterConfiguration = New-PesterConfiguration
        $pesterConfiguration.Run.Path = "integrationtests/Tests/EdgeModules/ManagementModule/storagespaceallocation.Tests.ps1"
        $pesterConfiguration.Run.PassThru = $true
        $pesterConfiguration.TestResult.Enabled = $true
        $pesterConfiguration.TestResult.OutputFormat = "NUnitXml"
        $pesterConfiguration.TestResult.OutputPath = "$(System.DefaultWorkingDirectory)/test-managementmodulestoragespace.xml"
        $pesterConfiguration.Output.Verbosity = "Detailed"
        $result = Invoke-Pester -Configuration $pesterConfiguration          
        New-Item -ItemType Directory -Force -Path $(Pipeline.Workspace)/managementmodulestorageinttest
        customJson -results $result.Tests -outputFolderPath $(Pipeline.Workspace)/managementmodulestorageinttest -outputFileName "TESTS-managementmodulestorage-integration-report.json"
      azurePowerShellVersion: 'LatestVersion'

  - task: ArchiveFiles@2
    condition: |
      or (
          eq(variables['Build.SourceBranch'], 'refs/heads/main'),
          eq(variables['isCreateTestCasesInAdo'], 'true')
      )
    displayName: 'Create zip with generated test report json'
    inputs:
      rootFolderOrFile: '$(Pipeline.Workspace)/managementmodulestorageinttest'
      includeRootFolder: false
      archiveType: zip
      archiveFile: '$(Build.ArtifactStagingDirectory)/connmodule-managementmodulestrinttestreports-$(regionSc)-$(getBuildVariables.artifactVersion).zip'
      replaceExistingArchive: true

  - task: PublishPipelineArtifact@1
    condition: |
      or (
          eq(variables['Build.SourceBranch'], 'refs/heads/main'),
          eq(variables['isCreateTestCasesInAdo'], 'true')
      )
    displayName: 'Publish Pipeline artifact'
    inputs:
      path: '$(Build.ArtifactStagingDirectory)'
      artifact: 'connmodule-managementmodulestrinttestreports-$(regionSc)-$(getBuildVariables.artifactVersion)'

  - task: PublishTestResults@2
    displayName: 'Publish Results'
    inputs:
      testResultsFormat: 'NUnit'
      testResultsFiles: 'test-managementmodulestoragespace.xml'
      failTaskOnFailedTests: true
      testRunTitle: 'ConnectivityModule-ManagementModuleStorage-$(Build.SourceBranchName)-$(regionSc)-IntegrationTests'
